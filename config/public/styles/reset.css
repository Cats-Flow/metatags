/** The CSS code `*, :before, :after` is a selector that targets all elements on the page, as well as the pseudo-elements `::before` and `::after`. */
*,
:before,
:after {
  box-sizing: border-box;
  border-width: 0;
  border-style: solid;
  border-color: theme("borderColor.DEFAULT", currentColor);
}

/** The CSS code `html { ... }` is targeting the `<html>` element in the HTML document. It sets various properties for the `<html>` element, including: */
html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -moz-tab-size: 4;
  tab-size: 4;
  font-family: theme(
    "fontFamily.sans",
    ui-sans-serif,
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    "Helvetica Neue",
    Arial,
    "Noto Sans",
    sans-serif,
    "Apple Color Emoji",
    "Segoe UI Emoji",
    "Segoe UI Symbol",
    "Noto Color Emoji"
  );

  font-feature-settings: theme(
    "fontFamily.sans[1].fontFeatureSettings",
    normal
  );
}

/** The CSS code `body { margin: 0; line-height: inherit; }` is targeting the `<body>` element in the HTML document. It sets the margin of the `<body>` element to 0, which removes any default margin that may be applied by the browser. It also sets the line-height property to inherit, which means the line-height value will be inherited from the parent element. */
body {
  margin: 0;
  line-height: inherit;
}

/** The CSS code `hr { height: 0; color: inherit; border-top-width: 1px; }` is targeting the `<hr>` (horizontal rule) element in the HTML document. */
hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}

/** The CSS code `abbr:where([title]) { text-decoration: underline dotted; }` is targeting the `<abbr>` element that has a `title` attribute. It sets the text-decoration property to underline dotted, which adds an underline with dotted style to the text content of the `<abbr>` element. This is often used to indicate that the text is an abbreviation or acronym and provide additional information when the user hovers over the element. */
abbr:where([title]) {
  text-decoration: underline dotted;
}

/** The CSS code `h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }` is targeting the heading elements (`<h1>`, `<h2>`, `<h3>`, `<h4>`, `<h5>`, `<h6>`) in the HTML document. It sets the font-size and font-weight properties to inherit, which means the heading elements will inherit the font-size and font-weight values from their parent elements. This allows for consistent styling of headings throughout the document. */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/** The CSS code `a { color: inherit; text-decoration: inherit; }` is targeting the `<a>` (anchor) elements in the HTML document. It sets the color property to inherit, which means the color of the anchor text will be inherited from its parent element. This allows for consistent styling of anchor text throughout the document. */
a {
  color: inherit;
  text-decoration: inherit;
}

/** The CSS code `b, strong { font-weight: bolder; }` is targeting the `<b>` and `<strong>` elements in the HTML document. It sets the font-weight property to "bolder", which makes the text inside these elements appear bold. The "bolder" value is a relative value that makes the text appear bolder than the parent element's font-weight. */
b,
strong {
  font-weight: bolder;
}

/** The CSS code `code, kbd, samp, pre` is targeting the `<code>`, `<kbd>`, `<samp>`, and `<pre>` elements in the HTML document. It sets the font-family property to a list of monospace fonts, such as "ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "Consolas", "Liberation Mono", "Courier New", and "monospace". This ensures that the text inside these elements is displayed using a monospace font, which is commonly used for displaying code or computer output. */
code,
kbd,
samp,
pre {
  font-family: theme(
    "fontFamily.mono",
    ui-monospace,
    SFMono-Regular,
    Menlo,
    Monaco,
    Consolas,
    "Liberation Mono",
    "Courier New",
    monospace
  );

  font-size: 1em;
}

/** The CSS code `small { font-size: 80%; }` is targeting the `<small>` element in the HTML document. It sets the font-size property to 80%, which means the text inside the `<small>` element will be displayed at 80% of the size of the parent element's font size. This is often used to reduce the size of text for fine print or additional information that is less important than the surrounding text. */
small {
  font-size: 80%;
}

/** The CSS code `sub, sup` is targeting the `<sub>` and `<sup>` elements in the HTML document. */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/** The CSS code `table { text-indent: 0; border-color: inherit; border-collapse: collapse; }` is targeting the `<table>` element in the HTML document. */
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}

/** The CSS code you provided is targeting various form elements such as buttons, inputs, select dropdowns, and textareas. */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
}

button,
select {
  text-transform: none;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  appearance: button;
  background-color: transparent;
  background-image: none;
}

/** The CSS code `:-moz-focusring { outline: auto; }` is targeting the Firefox browser and applying a style to elements that have focus. It sets the outline property to auto, which means that when an element receives focus, it will have an outline around it. This is a visual indication for users to see which element is currently focused. */
:-moz-focusring {
  outline: auto;
}

:-moz-ui-invalid {
  box-shadow: none;
}

/** The CSS code `progress { vertical-align: baseline; }` is targeting the `<progress>` element in the HTML document. It sets the vertical-align property to baseline, which aligns the baseline of the `<progress>` element with the baseline of the surrounding text. This ensures that the progress bar is vertically aligned with the text on the same line. */
progress {
  vertical-align: baseline;
}

/** The CSS code `::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }` is targeting the inner and outer spin buttons of input elements with type "number" in webkit-based browsers (such as Chrome and Safari). */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/** The CSS code `[type="search"] { -webkit-appearance: textfield; appearance: textfield; outline-offset: -2px;  is targeting input elements with the attribute `type="search"`. */
[type="search"] {
  -webkit-appearance: textfield;
  appearance: textfield;
  outline-offset: -2px;
}

/** The CSS code `::-webkit-search-decoration { -webkit-appearance: none; }` is targeting the search decoration of input elements in webkit-based browsers (such as Chrome and Safari). It sets the `-webkit-appearance` property to `none`, which removes the default styling of the search decoration. This allows you to customize the appearance of the search decoration using your own CSS styles. */
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/** The CSS code `::-webkit-file-upload-button` is targeting the file upload button in webkit-based browsers (such as Chrome and Safari). It sets the `-webkit-appearance` property to `button`, which changes the appearance of the file upload button to look like a regular button. The `font: inherit` property ensures that the font used for the button is inherited from its parent element. */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

/** The CSS code `summary { display: list-item; }` is targeting the `<summary>` element in the HTML document. It sets the display property to list-item, which changes the default display behavior of the `<summary>` element from block to list-item. */
summary {
  display: list-item;
}

/** The CSS code `blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre { margin: 0; }` is setting the margin property to 0 for several HTML elements. This means that these elements will have no margin space around them. The affected elements include blockquote, dl, dd, headings (h1 to h6), horizontal rule (hr), figure, paragraphs (p), and preformatted text (pre). By setting the margin to 0, it removes any default margin that may be applied by the browser, resulting in these elements being positioned closer to adjacent elements or the edges of their containing elements. */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

/** The CSS code `fieldset { margin: 0; padding: 0; }` is targeting the `<fieldset>` element in the HTML document. It sets the margin and padding properties to 0, which removes any default margin and padding that may be applied by the browser. This allows you to have more control over the spacing and layout of the `<fieldset>` element and its contents. */
fieldset {
  margin: 0;
  padding: 0;
}

/** The CSS code `legend { padding: 0; }` is targeting the `<legend>` element in the HTML document. It sets the padding property to 0, which removes any default padding that may be applied by the browser. This allows you to have more control over the spacing and layout of the `<legend>` element and its contents. The `<legend>` element is typically used as a caption or title for a `<fieldset>` element, and this CSS code ensures that there is no extra padding around the `<legend>` element. */
legend {
  padding: 0;
}

/** The CSS code `ol, ul, menu { list-style: none; margin: 0; padding: 0; }` is targeting the `<ol>`, <ul>`, and `<menu>` elements in the HTML document. */
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/** The CSS code `textarea { resize: vertical; }` is targeting the `<textarea>` element in the HTML document. It sets the resize property to vertical, which allows the user to vertically resize the textarea element by dragging the bottom edge of the textarea. This provides a convenient way for users to adjust the height of the textarea to fit their input. */
textarea {
  resize: vertical;
}

/** The CSS code `input::placeholder, textarea::placeholder` is targeting the placeholder text of input and textarea elements in the HTML document. */
input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: theme("colors.gray.400", #9ca3af);
}

/** The CSS code `button, [role="button"] { cursor: pointer; }` is targeting both the `<button>` element and any element with the attribute `role="button"`. It sets the cursor property to pointer, which changes the appearance of the cursor when hovering over these elements to a hand or pointer shape. This is a common styling for interactive elements like buttons, indicating to the user that they can click or interact with the element. */
button,
[role="button"] {
  cursor: pointer;
}

/** The above code is defining a CSS rule for the `disabled` pseudo-class. It sets the `cursor` property to `default`, which means that when an element with the `disabled` attribute is disabled, the cursor will be the default cursor. */
:disabled {
  cursor: default;
}

/** The above code is a CSS code snippet. It is targeting various HTML elements such as `img`, `svg`, video`, `canvas`, `audio`, `iframe`, `embed`, and `object`. */
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
}

img,
video {
  max-width: 100%;
  height: auto;
}

/** The above code is a CSS rule that targets elements with the "hidden" attribute and sets their display property to "none", effectively hiding them from view. */
[hidden] {
  display: none;
}

/** The above code is a CSS code snippet that sets the margin and padding of all elements on the page to 0. This effectively removes any default spacing around elements, creating a clean slate for styling. */
* {
  margin: 0;
  padding: 0;
}

/** The `:focus-visible` selector is used to apply styles to an element when it receives focus and is also visible to the user. */
:focus-visible {
  outline: none;
}